{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/std-list/std-list.component.ts","webpack:///src/app/std-list/std-list.component.html","webpack:///src/app/stddetails/stddetails.component.ts","webpack:///src/app/stddetails/stddetails.component.html","webpack:///src/app/student-service.service.ts","webpack:///src/app/student/student.component.ts","webpack:///src/app/student/student.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","appRoutes","path","component","AppModule","enableTracing","declarations","providers","bootstrap","StdListComponent","http","myService","fb","student","getStudents","subscribe","response","handleSuccessfulResponse","students","StddetailsComponent","route","stdid","snapshot","paramMap","get","console","log","getStdDetail","stdDet","studentDetails","Student","stdname","stdlastname","stdadd","stdcity","stdstate","stdzip","stddate","stdtel","stdemail","stdurl","stdmonth","stdyear","stdcheckbox","stdradio","stdlike","stddata","StudentServiceService","studentList","std","url","post","pipe","data","providedIn","StudentComponent","numeric","mean","sum","sd","stdArray","showSimpleAcknowledgement","showWinnerAcknowledgement","showSuccess","scheduleForm","group","sid","required","sname","lname","sdata","updateOn","saddress","szip","scity","sstate","semail","stel","sdate","surl","sgradmonth","sgradyear","scheck1","scheck2","scheck3","scheck4","scheck5","scheck6","radioBtn","likeliness","comments","$event","ctrlName","scheckCtrl","target","checked","patchValue","value","d","split","length","alert","i","computeCheckboxValue","setStudent","onSubmit","environment","submitUrl","idsUrl","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'swe642';\n}\n","<!-- Home Page -->\n<a routerLink=\"/survey\">CS Survey form</a> <br>\n<a routerLink=\"/list\">List All Surveys</a>\n<router-outlet></router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule }   from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { StudentComponent } from './student/student.component';\nimport { StddetailsComponent } from './stddetails/stddetails.component';\nimport { StdListComponent } from './std-list/std-list.component';\n\nconst appRoutes: Routes = [\n  {path:'stdDetails/:id',component:StddetailsComponent},\n  {path:'survey',component:StudentComponent},\n  {path:'list',component:StdListComponent}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StudentComponent,\n    StddetailsComponent,\n    StdListComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(appRoutes,{enableTracing:true})\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { StudentServiceService, Student } from '../student-service.service';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-std-list',\n  templateUrl: './std-list.component.html',\n  styleUrls: ['./std-list.component.css']\n})\nexport class StdListComponent implements OnInit {\n\n  students:string[];\n  student='';\n  \n\n  constructor(private http:HttpClient,private myService:StudentServiceService, private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.myService.getStudents().subscribe(\n      response =>this.handleSuccessfulResponse(response),\n     );\n  }\n\n  handleSuccessfulResponse(response)\n  {\n      this.students=response;\n  }\n\n}\n","<!-- Student Ids display page --> \n<table style=\"width:100px\">\n    <tr>\n        <th>StudentId</th>\n    </tr>\n    <tr *ngFor=\"let id of students\">\n        <td><a [routerLink]=\"['/stdDetails', id]\">{{id}}</a></td>\n    </tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { StudentServiceService, Student } from '../student-service.service';\nimport { StudentComponent } from '../student/student.component';\nimport { StdListComponent } from '../std-list/std-list.component';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-stddetails',\n  templateUrl: './stddetails.component.html',\n  styleUrls: ['./stddetails.component.css']\n})\nexport class StddetailsComponent implements OnInit {\n\n  stdDet:Student;\n  stdid:any;\n  studentDetails:any;\n  constructor(private myService:StudentServiceService,private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.stdid = this.route.snapshot.paramMap.get('id');\n    console.log(\"id selected is \"+this.stdid);\n    this.myService.getStdDetail(this.stdid).subscribe(\n      response=>this.handleSuccessfulResponse(response),\n    );\n    console.log(this.stdDet);\n  }\n\n  handleSuccessfulResponse(response)\n  {\n      this.studentDetails=response;\n      console.log(\"student details from database using id retrieving is \"+this.studentDetails);\n  }\n\n}\n\n","\n<!-- {{Records Display Page HTML}} -->\n<div>\n    <br>\n    <p>Welcome To Student Details </p>\n    <br>\n    <table>\n        <tr>\n            <th>StudentId</th>\n            <th>StudentFirstName</th>\n            <th>StudentLastName</th>\n            <th>StudentAddress</th>\n            <th>StudentCity</th>\n            <th>StudentState</th>\n            <th>StudentZip</th>\n            <th>StudentTel</th>\n            <th>StudentEmail</th>\n            <th>StudentDate</th>\n            <th>StudentUrl</th>\n            <th>StudentGradmonth</th>\n            <th>StudentGradyear</th>\n            <th>StudentCheckbox</th>\n            <th>StudentAwareness</th>\n            <th>StudentLikeliness</th>\n            <th>StudentData</th>\n        </tr>\n        <tr>\n            <td>{{studentDetails.stdid}}</td>\n            <td>{{studentDetails.stdname}}</td>\n            <td>{{studentDetails.stdlastname}}</td>\n            <td>{{studentDetails.stdadd}}</td>\n            <td>{{studentDetails.stdcity}}</td>\n            <td>{{studentDetails.stdstate}}</td>\n            <td>{{studentDetails.stdzip}}</td>\n            <td>{{studentDetails.stdtel}}</td>\n            <td>{{studentDetails.stdemail}}</td>\n            <td>{{studentDetails.stddate}}</td>\n            <td>{{studentDetails.stdurl}}</td>\n            <td>{{studentDetails.stdmonth}}</td>\n            <td>{{studentDetails.stdyear}}</td>\n            <td>{{studentDetails.stdcheckbox}}</td>\n            <td>{{studentDetails.stdradio}}</td>\n            <td>{{studentDetails.stdlike}}</td>\n            <td>{{studentDetails.stddata}}</td>\n        </tr>\n    </table>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {map} from 'rxjs/operators';\n\n\nexport class Student{\n  constructor(\n    public stdid:string,\n    public stdname:string,\n    public stdlastname:string,\n    public stdadd:string,\n    public stdcity:string,\n    public stdstate:string,\n    public stdzip:string,\n    public stddate:string,\n    public stdtel:string,\n    public stdemail:string,\n    public stdurl:string,\n    public stdmonth:string,\n    public stdyear:string,\n    public stdcheckbox:string,\n    public stdradio:string,\n    public stdlike:string,\n    public stddata:string,\n  ) {}\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentServiceService {\n\n  // serviceURL: string;\n  // liveInterviewWindow: any;\n  // private root: string;\n\n  private usersUrl: string;\n  private studentList:Array<String>=[];\n  private std:Array<Student>=[];\n  private stdDetail:Student;\n\n\n\n  constructor( private http:HttpClient) {\n  }\n\n\n  getStdDetail(stdid){\n    return this.http.get<Student>('http://localhost:8080/students'+'/'+stdid)\n  }\n\n  getStudents()\n  {\n    return this.http.get<Student[]>('http://localhost:8080/students');\n  }\n\n  setStudent(student){\n    console.log(student);\n    const url ='http://localhost:8080/students'\n     return this.http.post<any>(url, student).pipe(map((data:any)=>data));\n  }\n\n}\n","import { Component, OnInit, SystemJsNgModuleLoader } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { StudentServiceService, Student } from '../student-service.service';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-student',\n  templateUrl: './student.component.html',\n  styleUrls: ['./student.component.css']\n})\nexport class StudentComponent implements OnInit {\n\n  students:string[];\n student='';\n numeric:number=0;\n mean:number=0;\n sum : number=0;\n sd:number=0;\n value:String;\n data:String[];\n id:String;\n name:String;\n studentDetails:Student;\n scheduleForm: FormGroup;\n stdArray:Array<String>=[];\n showSimpleAcknowledgement:boolean = false;\n showWinnerAcknowledgement:boolean = false;\n\n\n\n\n\n showSuccess = true;\n\n  constructor(private http:HttpClient,private myService:StudentServiceService, private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.scheduleForm = this.fb.group({\n      sid: ['', Validators.required],\n      sname:['',Validators.required],\n      lname:['',Validators.required],\n      sdata:['', {updateOn: \"blur\"}],\n      saddress:['',Validators.required],\n      szip:['',Validators.required],\n      scity:['',Validators.required],\n      sstate:['',Validators.required],\n      semail:['',Validators.required],\n      stel:['',Validators.required],\n      sdate:['',Validators.required],\n      surl:['',Validators.required],\n      sgradmonth:[],\n      sgradyear:[],\n      scheck1:[''],\n      scheck2:[''],\n      scheck3:[''],\n      scheck4:[''],\n      scheck5:[''],\n      scheck6:[''],\n radioBtn:[],\n likeliness:[],\n comments:[]\n    });\n\n    console.log(\"get students\"+this.myService.getStudents());\n\n    //this.myService.getStudents().subscribe(\n      //response =>this.handleSuccessfulResponse(response),\n     //);\n  }\n\n  handleSuccessfulResponse(response)\n  {\n      //this.students=response;\n      console.log(\"student ids retrieving \"+this.students);\n  }\n  changeCheckboxValue($event, ctrlName){\n    var scheckCtrl = this.scheduleForm.get(ctrlName);\n    $event.target.checked ? scheckCtrl.patchValue($event.target.value) : scheckCtrl.patchValue('')\n  }\n\n  countChar() {\n    var d = this.scheduleForm.get('sdata').value.split(','); // convert text into array of numbers\n    // elements of array are still strings, must convert to numbers\n\n    if (d.length < 10) {\n        alert('Data should be atleast 10 numbers');\n    }\n\n}\n\ncomputeCheckboxValue(){\n  var scheck1 = this.scheduleForm.get(\"scheck1\").value;\n  var scheck2 = this.scheduleForm.get(\"scheck2\").value;\n  var scheck3 = this.scheduleForm.get(\"scheck3\").value;\n  var scheck4 = this.scheduleForm.get(\"scheck4\").value;\n  var scheck5 = this.scheduleForm.get(\"scheck5\").value;\n  var scheck6 = this.scheduleForm.get(\"scheck6\").value;\n\n  return scheck1 + scheck2  + scheck3 + scheck4 + scheck5 + scheck6\n}\n\n  submit():void{\n\n    if(!this.scheduleForm.get('sid').value ||\n    !this.scheduleForm.get('sname').value ||\n    !this.scheduleForm.get('lname').value ||\n    !this.scheduleForm.get('saddress').value ||\n    !this.scheduleForm.get('scity').value ||\n    !this.scheduleForm.get('szip').value ||\n    !this.scheduleForm.get('sstate').value ||\n    !this.scheduleForm.get('stel').value ||\n    !this.scheduleForm.get('semail').value ||\n    !this.scheduleForm.get('sdate').value ){\n      alert('All the required fields must be entered');\n    }\n\n    else{\n  this.showSuccess = false;\n  this.value = this.scheduleForm.get(\"sdata\").value;\n  this.data = this.value.split(\",\")\n  for(let i=0;i<this.data.length;i++){\n    this.numeric= this.numeric + (+this.data[i]);\n\n  }\n\n  \n\n\n\n  this.showSuccess = true;\n  this.showSimpleAcknowledgement = true;\n\n\n console.log(\"radio\"+this.scheduleForm.get(\"radioBtn\").value);\n console.log(\"likeliness\"+this.scheduleForm.get(\"likeliness\").value)\n\n   this.studentDetails = {\n     stdid : this.scheduleForm.get(\"sid\").value,\n     stdname : this.scheduleForm.get(\"sname\").value,\n     stdlastname : this.scheduleForm.get(\"lname\").value,\n    stdadd:this.scheduleForm.get(\"saddress\").value,\n    stdcity:this.scheduleForm.get(\"scity\").value,\n    stdstate:this.scheduleForm.get(\"sstate\").value,\n    stdzip:this.scheduleForm.get(\"szip\").value,\n    stdtel:this.scheduleForm.get(\"stel\").value,\n    stdemail:this.scheduleForm.get(\"semail\").value,\n    stddate:this.scheduleForm.get(\"sdate\").value,\n    stdurl:this.scheduleForm.get(\"surl\").value,\n    stdmonth:this.scheduleForm.get(\"sgradmonth\").value,\n    stdyear:this.scheduleForm.get(\"sgradyear\").value,\n    stdcheckbox:this.computeCheckboxValue(),\n    stdradio:this.scheduleForm.get(\"radioBtn\").value,\n    stdlike:this.scheduleForm.get(\"likeliness\").value,\n    stddata:this.scheduleForm.get(\"sdata\").value\n   }\n  console.log(this.studentDetails);\n  this.myService.setStudent(this.studentDetails);\n  this.myService.setStudent(this.studentDetails).subscribe(studentList=>{\n    this.students=studentList;\n    response => alert(\"student added successfully\");\n  });\n\n\n  }\n    }\n\n\n\n  onSubmit(): void {\n  };\n\n\n}\n","<!-- Survey Form -->\n<body>\n<header>\n        <span>George Mason University </span><br>\n        <span>Computer Science Survey Page</span>\n\n    </header>\n    <form [formGroup]=\"scheduleForm\" (ngSubmit)=\"onSubmit()\" name='scheduleForm' id=\"scheduleId\">\n        <div class=\"surveyDetails\" *ngIf=\"showSuccess\">\n            <div>\n\n                <div class=\"survey-Details\">\n                    <div class=\"nameDetails\">\n                        <div style=\"display: flex;padding-top: 10px;\">\n                            <span class=\"note\">*</span>\n                            <div style=\"center: 10px;font-size: 20px;\">required fields</div>\n                        </div>\n                        <!-- details of user's firstname and lastname -->\n                        <fieldset>\n                            <legend align:center>Survey Information</legend>\n                            <table class=\"w3-table\" align:center>\n                                <td><label>UserID <span class=\"note\">*</span> </label></td>\n                                <td><input style=\"width: 100%;\" type=\"text\" formControlName=\"sid\" id=\"sid\" mValidateOnBlur required/></td>\n                                <tr>\n                                    <td><label>Firstname <span class=\"note\">*</span> </label></td>\n                                    <td><input style=\"width: 100%;\" title=\"Last name followed by first name\" type=\"text\" formControlName=\"sname\" id=\"sname\" mValidateOnBlur required/></td>\n                                </tr>\n\n                                <tr>\n                                    <td><label>Lastname <span class=\"note\">*</span> </label></td>\n                                    <td><input style=\"width: 100%;\" title=\"Last name followed by first name\" type=\"text\" formControlName=\"lname\" id=\"lname\" mValidateOnBlur required/></td>\n                                </tr>\n\n\n\n\n                                <!-- user input for address -->\n                                <tr>\n                                    <td><label>Street Address <span class=\"note\">*</span></label></td>\n                                    <td><input style=\"width: 100%;\" type=\"text\" title=\"House/Apt number + Street name\" formControlName=\"saddress\" id=\"saddress\"  mValidateOnBlur  /></td>\n                                </tr>\n\n\n                                <!--user input for state, city and zip-->\n                                <tr>\n                                    <td><label>City <span class=\"note\">*</span></label></td>\n                                    <td><input style=\"width: 100%;\" type=\"text\" formControlName=\"scity\" id=\"scity\" mValidateOnBlur ></td>\n                                </tr>\n                                <tr>\n                                    <td><label>Zip Code <span class=\"note\">*</span></label></td>\n                                    <td><input style=\"width: 100%;\" id=\"zipcode\" type=\"number\" formControlName=\"szip\" id=\"szip\" pattern=\"^\\d{5}(?:[-\\s]\\d{4})?$\" mValidateOnBlur  /> <br />\n                                        <label id=\"zip-err\"></label></td>\n                                </tr>\n                                <tr>\n                                    <td><label>State <span class=\"note\">*</span></label></td>\n                                    <td><input style=\"width: 100%;\" type=\"text\" formControlName=\"sstate\" id=\"sstate\" mValidateOnBlur ></td>\n                                </tr>\n\n\n\n\n                                <!-- user input for telephone number -->\n                                <tr>\n                                    <td><label>Telephone <span class=\"note\">*</span></label></td>\n                                    <td><input style=\"width: 100%;\" id=\"telephone\" type=\"tel\" formControlName=\"stel\" id=\"stel\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" placeholder=\"(xxx) xxx-xxxx\" mValidateOnBlur autocomplete=\"on\" formnovalidate required /></td>\n                                </tr>\n\n\n                                <!-- user input for email address -->\n                                <tr>\n                                    <td><label>Email<span class=\"note\">*</span></label></td>\n                                    <td><input type=\"email\" style=\"width: 100%;\" id=\"email\"  formControlName=\"semail\" id=\"semail\" required placeholder=\"one@gmail.com\" mValidateOnBlur autocomplete=\"on\" formnovalidate required /></td>\n                                </tr>\n                                <!-- user input for url -->\n                                <tr>\n                                    <td><label>URL</label></td>\n                                    <td><input type=\"url\" style=\"width: 100%;\" id=\"url\"  placeholder=\"https://www.url.com/\" formControlName=\"surl\" id=\"surl\" placeholder=\"https://www.url.com/\" mValidateOnBlur autocomplete=\"on\" formnovalidate  /></td>\n                                </tr>\n\n                                <!-- user input for date of survey -->\n                                <tr>\n                                    <td><label>Survey date <span class=\"note\">*</span></label></td>\n                                    <td><input style=\"width: 100%;\" id=\"date\" type=\"date\" formControlName=\"sdate\" id=\"sdate\"  mValidateOnBlur autocomplete=\"on\" formnovalidate  /></td>\n                                </tr>\n\n\n                                <!-- user input for graduation month -->\n                                <tr>\n                                    <td><label>High School Graduation </label></td>\n                                    <td><input style=\"width: 100%;\" id=\"grad_month\" type=\"text\" formControlName=\"sgradmonth\" id=\"sgradmonth\" required placeholder=\"month\" list=\"months\" mValidateOnBlur autocomplete=\"on\" formnovalidate required />\n                                        <datalist id=\"months\">\n                      <option value=\"January\"></option>\n                      <option value=\"February\"></option>\n                      <option value=\"March\"></option>\n                      <option value=\"April\"></option>\n                      <option value=\"May\"></option>\n                      <option value=\"June\"></option>\n                      <option value=\"July\"></option>\n                      <option value=\"August\"></option>\n                      <option value=\"September\"></option>\n                      <option value=\"October\"></option>\n                      <option value=\"November\"></option>\n                      <option value=\"December\"></option>\n                    </datalist> <input style=\"width: 100%;\" id=\"grad_year\" type=\"number\" formControlName=\"sgradyear\" id=\"sgradyear\" min=\"1900\" max=\"2020\" required placeholder=\"yyyy\" mValidateOnBlur autocomplete=\"on\" formnovalidate required\n                                        />\n                                    </td>\n                                </tr>\n                            </table>\n                        </fieldset>\n\n\n\n\n                        <fieldset>\n                            <legend>Campus feedback</legend>\n                            <table class=\"w3-table\">\n                                <tr>\n                                    <td><label>What did you like the most about GMU? </label></td>\n                                    <td><input name=\"check\" (change)=\"changeCheckboxValue($event, 'scheck1')\" type=\"checkbox\" value=\"Students\" formControlName=\"scheck1\" />Students\n                                        <input name=\"check\" (change)=\"changeCheckboxValue($event, 'scheck2')\" type=\"checkbox\" value=\"Location\" formControlName=\"scheck2\" />Location\n                                        <input name=\"check\" (change)=\"changeCheckboxValue($event, 'scheck3')\" type=\"checkbox\" value=\"Campus\" formControlName=\"scheck3\" />Campus\n                                        <input name=\"check\" (change)=\"changeCheckboxValue($event, 'scheck4')\" type=\"checkbox\" value=\"Atmosphere\" formControlName=\"scheck4\" />Atmosphere\n                                        <input name=\"check\" (change)=\"changeCheckboxValue($event, 'scheck5')\" type=\"checkbox\" value=\"Dorm Rooms\" formControlName=\"scheck5\" />Dorm Rooms\n                                        <input name=\"check\" (change)=\"changeCheckboxValue($event, 'scheck6')\" type=\"checkbox\" value=\"Sports\" formControlName=\"scheck6\" />Sports\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td><label>How did you hear about us ?</label></td>\n                                    <td><input name=\"interest\" type=\"radio\" value=\"Friends\" required formControlName=\"radioBtn\" />Friends\n                                        <input name=\"interest\" type=\"radio\" value=\"Television\" required formControlName=\"radioBtn\" />Television\n                                        <input name=\"interest\" type=\"radio\" value=\"Internet\" required formControlName=\"radioBtn\" />Internet\n                                        <input name=\"interest\" type=\"radio\" value=\"Other\" required formControlName=\"radioBtn\" />Other\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td><label>How likey would you recommend GMU to others? </label></td>\n                                    <td><select id=\"recommend\" required formControlName=\"likeliness\">\n                          <option>--Select--</option>\n                          <option>Very Likey</option>\n                          <option>Likey</option>\n                          <option>Unlikey</option>\n                      </select></td>\n                                </tr>\n                            </table>\n\n                        </fieldset>\n\n\n                        <!--10 comma seperated numbers display-->\n\n\n                        <fieldset>\n                            <legend>Please enter 10 comma separated numbers</legend>\n                            <table class=\"w3-table\">\n                                <tr>\n                                    <td><label>Data</label></td>\n                                    <td><input style=\"width: 200%;\" name=\"data\" type=\"text\" formControlName=\"sdata\" id=\"sdata\" (blur)=\"countChar()\" title=\"To win a price enter 10 comma separated numbers between 1 to 100\" formnovalidate/>\n                                    </td>\n                                </tr>\n                            </table>\n                        </fieldset>\n                        <fieldset>\n                            <table class=\"w3-table\">\n                              <tr >\n                              <td colspan=2 style=\"text-align: center;\">\n                                 <button  (click)=\"submit()\" class=\"button button1\" id=\"schedule\" type=\"button\" value=\"SCHEDULE\">Submit</button>\n\n                              <input type=\"Reset\" value=\"Cancel\" /></td>\n                              </tr>\n\n                            </table>\n                        </fieldset>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </form>\n\n</body>\n\n\n<!--Simple acknowledgement display-->\n\n<div *ngIf=\"showSimpleAcknowledgement\">\n    <h2>You have submitted the form successfully. Your response is recorded</h2>\n    \n</div>\n\n<footer>\n        <address>\n         <span>Mohana Krishna,Spurthi,Keerthana, Manish</span><br>\n         <span>GMU Computer Science,Fairfax,22030</span>\n        </address>\n\n    </footer>\n<router-outlet></router-outlet>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  submitUrl : \"http://localhost:8080/SampleRest/resources/restService/add\",\n  idsUrl : \"http://localhost:8080/SampleRest/resources/restService/ids\",\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}